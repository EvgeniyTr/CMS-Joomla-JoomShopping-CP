<?php  // Запрет прямого доступа.  defined('_JEXEC') or die;  class plgJshoppingAdminCloudpayments_Cp extends JPlugin  {      function install($parent) {     self::addError("___INSTALL___");     jimport('joomla.filesystem.folder');      jimport('joomla.filesystem.file');      JFolder::move(JUri::root().'/plugins/jshoppingadmin/cloudpayments_cp/install/pm_cloudpayments_cp', JUri::root() . '/components/com_jshopping/payments/pm_cloudpayments_cp');     }         public function onBeforeChangeOrderStatusAdmin($order_id, $status, $status_id, $notify, $comments, $include_comment, $view_order)    {      if ($status):        switch ($status):          case '3':            self::refund_($order_id);            break;          case '4':            self::refund_($order_id);            break;        endswitch;      endif;    }    function refund_($order_id)    {      $order = self::get_order($order_id);      $request = array(        'TransactionId' => $order['transaction'],        'Amount' => number_format($order['order_total'], 2, '.', ''),      );      $url = 'https://api.cloudpayments.ru/payments/refund';      $payment_params = self::getPaymentParams_();      $accesskey = $payment_params['publicId'];      $access_psw = $payment_params['secret_api'];      if ($accesskey && $access_psw) {        $ch = curl_init($url);        curl_setopt($ch, CURLOPT_HTTPAUTH, CURLAUTH_BASIC);        curl_setopt($ch, CURLOPT_USERPWD, $accesskey . ":" . $access_psw);        curl_setopt($ch, CURLOPT_URL, $url);        curl_setopt($ch, CURLOPT_RETURNTRANSFER, true);        curl_setopt($ch, CURLOPT_POST, true);        curl_setopt($ch, CURLOPT_POSTFIELDS, $request);        $content = curl_exec($ch);        $httpCode = curl_getinfo($ch, CURLINFO_HTTP_CODE);        $curlError = curl_error($ch);        curl_close($ch);        $out = self::Object_to_array(json_decode($content));        self::addError(print_r($content));      }    }    public function addError($str)    {      $file = $_SERVER['DOCUMENT_ROOT'] . '/log_cloud1.txt';      $current = file_get_contents($file);      $current .= print_r($str, 1) . "\n";      file_put_contents($file, $current);    }    public function Object_to_array($data)      ///OK    {      if (is_array($data) || is_object($data)) {        $result = array();        foreach ($data as $key => $value) {          $result[$key] = self::Object_to_array($value);        }        return $result;      }      return $data;    }    function get_order($order_id)    {      if (!$order_id)        return false;      $db =& JFactory::getDBO();      $q = "SELECT * FROM `#__jshopping_orders` where `order_id`=" . $order_id;      $db->setQuery($q);      $data_rows_assoc_list = $db->loadAssocList();      return $data_rows_assoc_list[0];    }//ok    function getPaymentParams_()    {      $db =& JFactory::getDBO();      $q = "SELECT * FROM `#__jshopping_payment_method` where `payment_id`=9";      $db->setQuery($q);      $data_rows_assoc_list = $db->loadAssocList();      $params_tmp = str_replace(array("\r\n", "\r", "\n"), '+---+', $data_rows_assoc_list[0]['payment_params']);      $params_ = explode("+---+", $params_tmp);      foreach ($params_ as $value):        $tmp_1 = explode("=",$value);        $pm_params[$tmp_1[0]] =$tmp_1[1];      endforeach;      return $pm_params;    }  }